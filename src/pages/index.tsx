import Head from "next/head";

import {
  createStyles,
  Card,
  // Image,
  Text,
  Group,
  RingProgress,
  rem,
  Button,
} from "@mantine/core";
import { Container } from "@mantine/core";
import { useState } from "react";
import { List, ThemeIcon } from "@mantine/core";
import { IconCircleCheck, IconCircleDashed } from "@tabler/icons-react";
import { TextInput } from "@mantine/core";
import { useForm, zodResolver } from "@mantine/form";
import { todoSchema } from "schema/todoSchema";

const useStyles = createStyles((theme) => ({
  card: {
    backgroundColor:
      theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
  },

  footer: {
    display: "flex",
    justifyContent: "end",
    padding: `${theme.spacing.sm} ${theme.spacing.lg}`,
    borderTop: `${rem(1)} solid ${
      theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[2]
    }`,
  },

  title: {
    fontFamily: `Greycliff CF, ${theme.fontFamily}`,
    lineHeight: 1,
  },
}));
const formSchema = todoSchema;
type FormData = Zod.infer<typeof todoSchema>;
export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const { classes } = useStyles();
  const [todos, setTodos] = useState<string[]>([]);

  const form = useForm<FormData>({
    validate: zodResolver(todoSchema),
    initialValues: {
      textTodo: "",
    },
  });

  const submit = (data: FormData) => {
    setTodos([...todos, data.textTodo]);
  };

  return (
    <>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create-t3-app" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <Container my={20}>
        <Card withBorder padding="lg" className={classes.card}>
          <Group position="apart" mt="xl">
            <Text fz="sm" fw={700} className={classes.title}>
              title
            </Text>
            <Group spacing={5}>
              <RingProgress
                size={18}
                sections={[{ value: 80, color: "blue" }]}
              />
            </Group>
          </Group>
          <form onSubmit={form.onSubmit((values) => console.log(values))}>
            <Group>
              <TextInput
                {...form.getInputProps("todoText")}
                placeholder="your task"
                withAsterisk
              />
              <Button type="submit">Add</Button>
            </Group>
          </form>
          <Text mt="sm" mb="md" c="dimmed" fz="xs">
            <List
              icon={
                <ThemeIcon color="teal" size={24} radius="xl">
                  <IconCircleCheck size="1rem" />
                </ThemeIcon>
              }
            >
              {todos.map((todo, i) => (
                <List.Item key={`${todo}-${i}`}>
                  Clone or download repository from GitHub
                </List.Item>
              ))}
              {/* <List.Item>Install dependencies with yarn</List.Item>
              
              <List.Item
                icon={
                  <ThemeIcon color="blue" size={24} radius="xl">
                    <IconCircleDashed size="1rem" />
                  </ThemeIcon>
                }
              >
                Submit a pull request once you are done
              </List.Item> */}
            </List>
          </Text>
          <Card.Section className={classes.footer}>
            <Button color="blue">Save</Button>
          </Card.Section>
        </Card>
      </Container>
    </>
  );
}
